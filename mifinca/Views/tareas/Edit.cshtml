@model mifinca.Models.tarea

@{
    ViewBag.Title = "Edit";
}

<h2>Editar tarea</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_tarea)

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.id_empleado, "Nombre del empleado", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownList("id_empleado", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.id_tipo, "Tipo de tarea", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownList("id_tipo", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_tipo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.fecha_inicio, "Fecha inicio", htmlAttributes: new { @class = "control-label " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fecha_inicio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fecha_inicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.fecha_fin, "Fecha fin", htmlAttributes: new { @class = "control-label " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fecha_fin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fecha_fin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.descripcion, "Descripción", htmlAttributes: new { @class = "control-label " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>*@
    <div class="form-group mb-3">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-success btn-lg input-block-level form-control mb-2" />
            @Html.ActionLink("Salir sin guardar", "Index", new { area = "" }, new { @class = "btn btn-danger btn-lg d-flex justify-content-center" })
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
